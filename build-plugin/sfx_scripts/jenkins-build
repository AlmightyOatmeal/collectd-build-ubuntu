#!/bin/bash -ex
#This script is to build the collectd-signalfx plugin in Jenkins. It need the environment variables JOB_NAME and BASE_DIR.
. collectd-build-ubuntu/build-plugin/sfx_scripts/environ.sh

# Remove the docker container from last interrupted run
if [[ $(docker ps -a | grep -w "${JOB_NAME}" | grep -Ev "grep") ]]; then
  docker rm -f ${JOB_NAME}
fi

if ! [ -z $JOB_NAME ] && ! [ -z $BASE_DIR ]; then
  tempfolder=$(mktemp -d $(pwd)/0.XXXXXX)
  trap "rm -rf $tempfolder; docker rm ${JOB_NAME}" EXIT
  #Build the packages
  docker run --privileged --name ${JOB_NAME} -t -v ${BASE_DIR}/${JOB_NAME}/signalfx-collectd-plugin:/opt/signalfx-collectd-plugin -v ${BASE_DIR}/${JOB_NAME}/collectd-build-ubuntu/build-plugin:/opt/collectd-plugin-build-debian -v ${BASE_DIR}/${JOB_NAME}/workspace:/opt/workspace -v ${BASE_DIR}/${JOB_NAME}/$(basename $tempfolder):/opt/result quay.io/signalfuse/collectd-build-ubuntu /opt/collectd-plugin-build-debian/sfx_scripts/cmdseq

  S3_BUCKET="s3://public-downloads--signalfuse-com/debs/signalfx-collectd-plugin"
  if ! [ -z $BUILD_PUBLISH ] && [ $BUILD_PUBLISH = True ]; then
        OUTPUT=$tempfolder

        ALL_OS=( "${OS_ARRAY[@]}" "${DEBIAN_OS_ARRAY[@]}" )
        (
        cd $OUTPUT
        for DISTRIBUTION in ${ALL_OS[@]}
        do
          (
          cd ${DISTRIBUTION}
          aws s3 rm --recursive $S3_BUCKET/${DISTRIBUTION}/debuild
          aws s3 rm --recursive $S3_BUCKET/${DISTRIBUTION}/debian
          aws s3 rm --recursive $S3_BUCKET/${DISTRIBUTION}/test
          aws s3 cp --recursive . $S3_BUCKET/${DISTRIBUTION}
          )
        done
        )
  fi
  exit 0;
fi
exit 1;
